name: ubuntu

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

jobs:

  debian-pkg:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        set -eux
        ci/add-debian-sid.sh
        sudo apt-get install -y "libboost-filesystem1.71-dev" "libfmt-dev=7.*" "libspdlog-dev=1:*" libseccomp-dev xonsh
    - name: Compile
      env:
        CC:   gcc-10
        CXX:  g++-10
      run: |
        set -eux
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        make -j
    - name: Package
      run: |
        set -eux
        cd build
        cpack
    - uses: actions/upload-artifact@v2
      with:
        name: deb-package
        path: build/*.deb
        retention-days: 5

  limited-tests:  # run tests that does not require VM (i.e. those that don't uses cgroup v2 controllers)
    runs-on: ubuntu-20.04
    needs:
      - debian-pkg
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: deb-package
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Setup environment
      run: |
        set -eux
        ci/add-debian-sid.sh
        sudo apt install -y ./tcg*.deb
    - name: Run tests on cgroup hybrid
      continue-on-error: false
      run: |
        set -eux
        pip install xonsh pytest wheel pytest-json-report pytest-timeout
        tcg
        export TCG_LOG_LEVEL=debug
        pytest --json-report --json-report-file=test_result.json --timeout=60 -v
    - uses: actions/upload-artifact@v2
      with:
        name: test-result
        path: test_result.json
        retention-days: 1
    - name: Show system log
      run: |
        sudo dmesg
        journalctl --no-pager

  push-package:
    runs-on: ubuntu-20.04
    needs:
      - debian-pkg
      # - limited-tests
    # if: github.event_name == 'push'
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: deb-package
    - name: Prepare
      run: |
        set -eux
        # install aptly
        deb http://repo.aptly.info/ nightly main
        apt-key adv --keyserver pool.sks-keyservers.net --recv-keys ED75B5A4483DA07C
        apt-get update
        apt-get install aptly

        # sudo apt-get install -y dpkg-dev
        # dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
        aptly repo create -component=main
        tree -H '.' --noreport --charset utf-8 > index.html
        ls
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        destination_dir: debian/x86_64
    - name: Validate deploy
      run: |
        sudo add-apt-repository "deb https://zasdfgbnm.github.io/tcg/debian/x86_64 /"
        sudo apt-get update
        sudo apt-get install -y tcg
        tcg
