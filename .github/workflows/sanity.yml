name: sanity-check

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

jobs:

  clang-format:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Lint with clang-format
      run: |
        set -eux
        find src -name '*.cpp' -o -name '*.h' -o -name '*.hpp'| xargs clang-format -i
        GIT_DIFF=$(git diff)
        if [[ -z $GIT_DIFF ]]; then
            exit 0
        fi
        echo $GIT_DIFF
        exit 1

  # clang-tidy:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y libboost-all-dev clang-tidy
  #   - name: Generate compile_commands.json
  #     run: |
  #       mkdir build
  #       cd build
  #       cmake ..
  #   - name: Lint with clang-tidy
  #     run: |
  #       clang-tidy -p build/compile_commands.json src/*.{cpp,hpp}

  debian-pkg:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        set -eux
        ci/add-debian-sid.sh
        sudo apt-get install -y libboost-all-dev libfmt-dev libspdlog-dev xonsh
    - name: Compile
      env:
        CC:   gcc-10
        CXX:  g++-10
      run: |
        set -eux
        mkdir build
        cd build
        cmake ..
        make -j
        sudo chown root tcg
        sudo chmod +s tcg
    - name: Package
      run: |
        set -eux
        cd packaging/debian
        ./build.xsh
    - uses: actions/upload-artifact@v2
      with:
        name: deb-package
        path: packaging/debian/*.deb
        retention-days: 5

  limited-tests:  # run tests that does not require VM (i.e. those that don't uses cgroup)
    runs-on: ubuntu-20.04
    needs:
      - debian-pkg
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: deb-package
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Setup environment
      run: ci/add-debian-sid.sh
    - name: Run tests on cgroup v1
      timeout-minutes: 1
      run: |
        set -eux
        sudo apt install -y ./tcg*.deb
        pip install xonsh pytest
        pytest -v

  xonsh-test-pypi:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install dependencies
      run: |
        set -eux
        python -m pip install --upgrade pip
        pip install twine wheel xonsh
    - name: build and upload
      run: |
        set -eux
        cd shells/xonsh
        rm -rf dist/*
        python setup.py sdist bdist_wheel
        twine upload --skip-existing --repository-url https://test.pypi.org/legacy/ -u zasdfgbnm-bot -p ${{secrets.ZASDFGBNM_BOT_TEST_PYPI_PASSWORD}} dist/*
